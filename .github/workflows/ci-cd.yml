name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Install dependencies
      run: pip install flask

    - name: Build Docker image
      run: docker build -t soujanyachalla/hello-service .

    - name: Login to Docker Hub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin


    - name: Push the Docker image
      run: docker push soujanyachalla/hello-service:latest

    - name: Run tests
      run: |
        docker run -d -p 5000:5000 soujanyachalla/hello-service
        sleep 5
        curl -f http://localhost:5000

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-2

    - name: Install kubectl
      run: |
        curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
        chmod +x kubectl
        sudo mv kubectl /usr/local/bin/

    - name: Update kubeconfig
      run: |
        aws eks update-kubeconfig --name web-cluster --region us-east-2

    - name: Create Kubernetes Secret
      run: |
        kubectl create secret docker-registry dockerhub-secret \
          --docker-server=https://index.docker.io/v1/ \
          --docker-username="${{ secrets.DOCKER_USERNAME }}" \
          --docker-password="${{ secrets.DOCKER_PASSWORD }}" \
          --docker-email="${{ secrets.DOCKER_EMAIL }}"

    - name: Deploy to Kubernetes
      run: |
        kubectl apply -f deployment.yaml
        kubectl apply -f service.yaml

